
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.geosdi</groupId>
        <artifactId>geoplatform-core</artifactId>
        <version>1.5-SNAPSHOT</version>
    </parent>

    <groupId>org.geosdi</groupId>
    <artifactId>geoplatform-dao</artifactId>
    <version>1.5-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Geo-Platform :: == CORE DAO</name>
    
    <properties>
        <!-- Keep aligned with src/main/resources/geoplatform_datasource.xml -->
        <db.baseurl>jdbc:postgresql://localhost:5432</db.baseurl>
        <db.url>${db.baseurl}/gp</db.url>
        <db.driverClassName>org.postgresql.Driver</db.driverClassName>
        <db.username>postgres</db.username>
        <db.password>0x,postgres,0x</db.password>
        
        <dataset.file>src/test/resources/bootstrap-db.xml</dataset.file>
    </properties>

    <dependencies>             

        <!-- APACHE COMMONS -->
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>

        <!-- GEOPLATFORM WS -->
        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-model</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>cglib</groupId>
                    <artifactId>cglib</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-configurator</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-sharing</artifactId>
        </dependency>

        <!-- JASYPT -->
        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jasypt</groupId>
            <artifactId>jasypt-spring31</artifactId>
        </dependency>

        <!-- logging dependencies, delegate all to slf4j and use logback -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>dom4j</groupId>
            <artifactId>dom4j</artifactId>
        </dependency>

        <!-- AOP -->
        <dependency>
            <groupId>aopalliance</groupId>
            <artifactId>aopalliance</artifactId>
            <version>1.0</version>
        </dependency>

        <!-- SPRING -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>
		
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>

        <!-- HIBERNATE JAVAX PERSISTENCE -->
        <dependency>
            <groupId>org.hibernate.javax.persistence</groupId>
            <artifactId>hibernate-jpa-2.0-api</artifactId>
        </dependency>

        <!-- HIBERNATE-GENERIC-DAO -->
        <dependency>
            <groupId>com.googlecode.genericdao</groupId>
            <artifactId>dao</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.googlecode.genericdao</groupId>
            <artifactId>search-hibernate</artifactId>
        </dependency>

        <dependency>
            <groupId>com.googlecode.genericdao</groupId>
            <artifactId>search-jpa-hibernate</artifactId>
        </dependency>

        <!-- POSTGRES - POSTGIS -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.postgis</groupId>
            <artifactId>postgis-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <!-- HIBERNATE -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
        </dependency>        

        <!-- HIBERNATE-SPATIAL -->
        <dependency>
            <groupId>org.hibernatespatial</groupId>
            <artifactId>hibernate-spatial-postgis</artifactId>
        </dependency>
        
        <!-- CGLIB -->
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
        </dependency>

        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
        </dependency>
        
        <dependency>
            <groupId>org.apache.xmlgraphics</groupId>
            <artifactId>batik-ext</artifactId>
            <version>1.7</version>
        </dependency>

        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-terracotta</artifactId>
        </dependency>
        
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>2.2</version>
                <dependencies>
                    
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-core</artifactId>
                        <version>${hibernate-version}</version>
                    </dependency>

                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-entitymanager</artifactId>
                        <version>${hibernate-version}</version>
                    </dependency>
                    
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-tools</artifactId>
                        <version>3.2.4.GA</version>
                    </dependency>
                    
                    <dependency>
                        <groupId>org.hibernate</groupId>
                        <artifactId>hibernate-validator</artifactId>
                        <version>4.2.0.Final</version>
                    </dependency>

                </dependencies>
                
                <executions>
                    <execution>
                        <phase>process-classes</phase>
                        <goals>
                            <goal>hbm2ddl</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <components>
                        <component>
                            <name>hbm2ddl</name>
                            <implementation>annotationconfiguration</implementation>
                            <outputDirectory>target/classes</outputDirectory>
                        </component>
                        <component>
                            <name>hbmdoc</name>
                        </component>
                    </components>
                    <componentProperties>
                        <configurationfile>/src/test/resources/hibernate.cfg.xml</configurationfile>
                        <outputfilename>geoplatform-model.ddl</outputfilename>

                        <jdk5>true</jdk5>

                        <drop>false</drop>
                        <create>true</create>
                        <export>false</export>
                        <format>true</format>
                    </componentProperties>
                </configuration>
            </plugin>

            <!-- Attach sources ============================================ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
        </plugins>

    </build>
    
    <profiles>
        <!-- mvn sql:execute -P drop-db & mvn sql:execute -P create-db & mvn sql:execute -P create-db-schema -->
        
        <!-- mvn sql:execute -P drop-db -->
        <profile>
            <id>drop-db</id>            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>
                                                
                        <configuration>
                            <!-- Need another database to drop the targeted one -->
                            <url>${db.baseurl}/template_postgis</url>
                            <driver>${db.driverClassName}</driver>                            
                            <username>${db.username}</username>
                            <password>${db.password}</password>                            
                            
                            <sqlCommand>DROP DATABASE gp</sqlCommand>
                            <autocommit>true</autocommit>
                            <!-- Ignore error when database is not avaiable -->
                            <onError>continue</onError>
                        </configuration>                                                
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- mvn sql:execute -P create-db -->
        <profile>
            <id>create-db</id>            
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>
                                                
                        <configuration>
                            <url>${db.baseurl}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                            
                            <!-- No transaction -->
                            <autocommit>true</autocommit>
                            <sqlCommand>CREATE DATABASE gp TEMPLATE template_postgis</sqlCommand>
                        </configuration>                                                
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- mvn sql:execute -P create-db-schema -->
        <profile>
            <id>create-db-schema</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>
                                                
                        <configuration>
                            <url>${db.url}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                                                        
                            <autocommit>true</autocommit>
                            <srcFiles>                      
                                <srcFile>target/classes/geoplatform-model.ddl</srcFile>
                            </srcFiles>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- mvn sql:execute -P bootstrap-db -->
        <profile>
            <id>bootstrap-db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>
                        
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>
                                                
                        <configuration>
                            <url>${db.url}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                                                        
                            <autocommit>true</autocommit>
                            <srcFiles>                      
                                <srcFile>target/classes/data/insert.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- mvn dbunit:export -P export-data -->
        <profile>
            <id>export-data</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <version>1.0-beta-3</version>
                        
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>
                                                
                        <configuration>                            
                            <url>${db.url}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                            
                            <dataTypeFactoryName>org.dbunit.ext.postgresql.PostgresqlDataTypeFactory</dataTypeFactoryName>
                            <format>xml</format>
                            <dest>${dataset.file}</dest>
                            <tables> 
                                <list>
                                    <name>gp_account</name>
                                </list>
                                <list>
                                    <name>gp_authority</name>
                                </list>
                            </tables>                                                            
                        </configuration>                        
                    </plugin>
                </plugins>
            </build>
        </profile>
        
        <!-- mvn dbunit:operation -P import-data -->
        <profile>
            <id>import-data</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <version>1.0-beta-3</version>
                        
                        <dependencies>
                            <dependency>
                                <groupId>postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>
                                                
                        <configuration>                            
                            <url>${db.url}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>
                                                            
                            <dataTypeFactoryName>org.dbunit.ext.postgresql.PostgresqlDataTypeFactory</dataTypeFactoryName>
                            <format>xml</format>
                            <src>${dataset.file}</src>
                            <!-- DELETE_ALL operation followed by an INSERT operation -->
                            <type>CLEAN_INSERT</type>
                        </configuration>                        
                    </plugin>
                </plugins>
            </build>            
        </profile>
        
    </profiles>

</project>
