<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.geosdi</groupId>
        <artifactId>geoplatform-core</artifactId>
        <version>1.9-SNAPSHOT</version>
    </parent>

    <groupId>org.geosdi</groupId>
    <artifactId>geoplatform-dao</artifactId>
    <version>1.9-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Geo-Platform :: == CORE DAO</name>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.geosdi</groupId>
                <artifactId>geoplatform-hibernate-validator-dependency</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${project.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <properties>
        <db.baseurl>jdbc:postgresql://localhost:5432</db.baseurl>
        <db.url>${db.baseurl}/gp</db.url>
        <db.driverClassName>org.postgresql.Driver</db.driverClassName>
        <db.username>postgres</db.username>
        <db.password>0x,postgres,0x</db.password>
        <dataset.file>src/test/resources/bootstrap-db.xml</dataset.file>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-model</artifactId>
        </dependency>

        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-sharing</artifactId>
        </dependency>

        <!-- SPRING -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-expression</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-beans</artifactId>
        </dependency>

        <dependency>
            <groupId>org.locationtech.jts</groupId>
            <artifactId>jts-core</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>xerces</groupId>
                    <artifactId>xercesImpl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-persistence-api</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-persistence-config</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-persistence-loader</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>org.geosdi</groupId>
            <artifactId>geoplatform-ehcache-support</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
            <groupId>net.postgis</groupId>
            <artifactId>postgis-jdbc</artifactId>
        </dependency>

        <!-- =========================================================== -->
        <!-- ==================== HIBERNATE SPATIAL ==================== -->
        <!-- =========================================================== -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-spatial</artifactId>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
        </dependency>

        <dependency>
           <groupId>jakarta.validation</groupId>
            <artifactId>jakarta.validation-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hibernate.validator</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>

        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>jakarta.el</artifactId>
        </dependency>

        <!-- logging dependencies, delegate all to slf4j and use logback -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>log4j-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>

        <dependency>
            <groupId>org.opengeo</groupId>
            <artifactId>geodb</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
        </dependency>

        <!-- H2 and GEODB -->
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
        </dependency>

        <!-- =========================================================== -->
        <!-- ============================ TEST ========================= -->
        <!-- =========================================================== -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!-- JUnit -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <!-- Attach sources ============================================ -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <GP_PERSISTENCE_PBE_KEY>$-geosdi2021,??/08/1345786543ffFF,??-77</GP_PERSISTENCE_PBE_KEY>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- mvn sql:execute -P drop-db & mvn sql:execute -P create-db & mvn sql:execute -P create-db-schema -->

        <!-- mvn sql:execute -P drop-db -->
        <profile>
            <id>drop-db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <!-- Need another database to drop the targeted one -->
                            <url>${db.baseurl}/template_postgis</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>

                            <sqlCommand>DROP DATABASE gp</sqlCommand>
                            <autocommit>true</autocommit>
                            <!-- Ignore error when database is not avaiable -->
                            <onError>continue</onError>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- mvn sql:execute -P create-db -->
        <profile>
            <id>create-db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <url>${db.baseurl}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>

                            <!-- No transaction -->
                            <autocommit>true</autocommit>
                            <sqlCommand>CREATE DATABASE gp TEMPLATE template_postgis</sqlCommand>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- mvn sql:execute -P create-db-schema -->
        <profile>
            <id>create-db-schema</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <url>${db.url}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>

                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>target/sql/ddl/geoplatform-model-ddl.sql</srcFile>
                            </srcFiles>
                        </configuration>
                        <executions>
                            <execution>
                                <id>create-db-schema</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- mvn sql:execute -P bootstrap-db -->
        <profile>
            <id>bootstrap-db</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>sql-maven-plugin</artifactId>
                        <version>1.5</version>

                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <url>${db.url}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>

                            <autocommit>true</autocommit>
                            <srcFiles>
                                <srcFile>target/classes/data/insert.sql</srcFile>
                            </srcFiles>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- mvn dbunit:export -P export-data -->
        <profile>
            <id>export-data</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <version>1.0-beta-3</version>

                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <url>${db.url}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>

                            <dataTypeFactoryName>org.dbunit.ext.postgresql.PostgresqlDataTypeFactory
                            </dataTypeFactoryName>
                            <format>xml</format>
                            <dest>${dataset.file}</dest>
                            <tables>
                                <list>
                                    <name>gp_account</name>
                                </list>
                                <list>
                                    <name>gp_authority</name>
                                </list>
                            </tables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!-- mvn dbunit:operation -P import-data -->
        <profile>
            <id>import-data</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>dbunit-maven-plugin</artifactId>
                        <version>1.0-beta-3</version>

                        <dependencies>
                            <dependency>
                                <groupId>org.postgresql</groupId>
                                <artifactId>postgresql</artifactId>
                                <version>${postgresql-version}</version>
                            </dependency>
                        </dependencies>

                        <configuration>
                            <url>${db.url}</url>
                            <driver>${db.driverClassName}</driver>
                            <username>${db.username}</username>
                            <password>${db.password}</password>

                            <dataTypeFactoryName>org.dbunit.ext.postgresql.PostgresqlDataTypeFactory
                            </dataTypeFactoryName>
                            <format>xml</format>
                            <src>${dataset.file}</src>
                            <type>CLEAN_INSERT</type>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
